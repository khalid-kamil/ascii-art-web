package main

import (
	"fmt"
	"html/template"
	"io/ioutil"
	"log"
	"net/http"
	"webpractice/banner"
)

func OutputFormatError() string {
	return "Usage: go run . [STRING] [BANNER] [OPTION]\n\n" +
		"EX: go run . something standard --output=<fileName.txt>"
}
func AsciiArtOutput(input, ban string) string {
	// arg := ""
	// if strings.Contains(input, "\\r") {
	// input = strings.Replace(input, "\\r", "\\n", -1)
	font := [3]string{"standard", "shadow", "thinkertoy"}
	for _, f := range font {
		if f == ban {
			return banner.PrintAsciiArt(input, "banner/"+ban+".txt")
		}
	}
	// WriteTheFile(output, []byte(input))
	return OutputFormatError()
}

func WriteTheFile(fileName, toPrint string) {
	result := ioutil.WriteFile(fileName, []byte(toPrint), 0777)
	if result != nil {
		fmt.Println(OutputFormatError())
	}
}
func GetProcess(w http.ResponseWriter, r *http.Request) {
	if r.URL.Path != "/" {
		http.Error(w, "404 not found.", http.StatusNotFound)
		return
	}
	// switch r.Method {
	// case "GET":
	// 	http.ServeFile(w, r, "static/index.html") //GET the html file
	// 	// http.ServeFile(w, r, "staic/app.css")
	// case "POST":
	// 	if err := r.ParseForm(); err != nil {
	// 		fmt.Fprintf(w, "ParseForm() err: %v", err)
	// 		return
	// 	}
	input := r.FormValue("input-name")
	banner := r.FormValue("banner")
	p := AsciiArtOutput(input, banner) // run the function ascii art to convert tbe string into art
	// WriteTheFile("result.txt", p)
	t, _ := template.ParseFiles("static/index.html")
	t.Execute(w, p)

	// default:
	// 	http.Error(w, "Bad request", http.StatusBadRequest)
	// }
}

// func PostProcess(w http.ResponseWriter, r *http.Request) {

// }
func main() {
	// http.HandleFunc("/", PostProcess)
	http.HandleFunc("/", GetProcess)
	fmt.Printf("Starting server at port 2000\n")
	log.Fatal(http.ListenAndServe(":2000", nil))
}

		// t, err := template.ParseFiles("index.html")
		// if err != nil {
		// 	http.Error(w, "Internal Error", http.StatusInternalServerError)
		// 	return
		// }
		// t.Execute(w, t)
	//	http.ServeFile(w, r, "static/index.html")